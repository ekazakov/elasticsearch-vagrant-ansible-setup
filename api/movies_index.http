# https://marketplace.visualstudio.com/items?itemName=humao.rest-client

### Create mappings for index
PUT http://127.0.0.1:9200/movies
Content-Type: application/json

{
    "mappings": {
        "properties": {
            "id": { "type": "integer" },
            "year": { "type": "date" },
            "genre": { "type": "keyword"},
            "title": {
                "type": "text",
                "analyzer": "english",
                // keep raw version of the field to enable sorting by title
                "fields": {
                    "raw": {
                        "type": "keyword"
                    }
                }
            }
        }
    }
}


### Create mappings for index with year as text
PUT http://127.0.0.1:9200/movies
Content-Type: application/json

{
    "mappings": {
        "properties": {
            "id": { "type": "integer" },
            "year": { "type": "text" },
            "genre": { "type": "keyword"},
            "title": {
                "type": "text",
                "analyzer": "english",
                // keep raw version of the field to enable sorting by title
                "fields": {
                    "raw": {
                        "type": "keyword"
                    }
                }
            }
        }
    }
}

### Setup n-grams config
PUT http://127.0.0.1:9200/movies
Content-Type: application/json

{
    "settings": {
        "analysis": {
            "filter": {
                "autocomplete_filter": {
                    "type": "edge_ngram",
                    "min_gram": 1,
                    "max_gram": 20
                }
            },
            "analyzer": {
                "autocomplete": {
                    "type": "custom",
                    "tokenizer": "standard",
                    "filter": [
                        "lowercase",
                        "autocomplete_filter"
                    ]
                }
            }
        }
    }
}

### Test analyze from ^
GET http://127.0.0.1:9200/movies/_analyze
Content-Type: application/json

{
    "analyzer": "autocomplete",
    "text": "star"
}

### Create index with ngram support
PUT http://127.0.0.1:9200/movies/_mapping
Content-Type: application/json

{
    "properties": {
        "title": {
            "type": "text",
            "analyzer": "autocomplete"
        }
    }
}


### Get index

GET http://127.0.0.1:9200/movies/_mapping?pretty=true

### Populate index with bulk upload

PUT http://127.0.0.1:9200/_bulk?pretty
Content-Type: application/x-ndjson

< movies_input.txt

### Create/replace single movie

PUT http://127.0.0.1:9200/movies/_doc/109487?pretty
Content-Type: application/json

{
     "genre": ["IMAX", "Sci-Fi"],
     "title": "Interstellar",
     "year": 2014
}


### Partial update

POST http://127.0.0.1:9200/movies/_update/109487
Content-Type: application/json

{
    "doc": {
        "titile": "Interstellar",
        "year": 2014
    }
}


### Fetch all movies

GET http://127.0.0.1:9200/movies/_search?pretty
Content-Type: application/json


###

DELETE http://127.0.0.1:9200/movies
Content-Type: application/json


###

GET http://127.0.0.1:9200/movies/_search?pretty
Content-Type: application/json

{
    "query": {
        "match": {
            "title": "Star Treck"
        }
    }
}

###

GET http://127.0.0.1:9200/movies/_search?pretty
Content-Type: application/json

{
    "query": {
        "match_phrase": {
            "genre": "Sci-Fi"
        }
    }
}


### Light Queries 1

GET http://127.0.0.1:9200/movies/_search?q=title:star

### Light Queries 2

GET http://127.0.0.1:9200/movies/_search?q=+title:trek+year>2010


### Bool query with filter

GET http://127.0.0.1:9200/movies/_search
Content-Type: application/json

{
    "query": {
        "bool": {
            "must": {
                "term": { "title": "trek" }
            },
            "filter": {
                "range": { "year": {"gte": 2010 } }
            }
        }
    }
}

### Match frase

GET http://127.0.0.1:9200/movies/_search
Content-Type: application/json

{
    "query": {
        "match_phrase": {
            "title": "star wars"
        }
    }
}

### Match frase with proximity (slop property)

GET http://127.0.0.1:9200/movies/_search
Content-Type: application/json

{
    "query": {
        "match_phrase": {
            "title": {
                "query": "star beyond",
                "slop": 1
            }
        }
    }
}


###

GET http://127.0.0.1:9200/movies/_search
Content-Type: application/json

{
    "query": {
        "bool": {
            "must": {
                "match_phrase": {
                    "title": "Star Wars"
                }
            },
            "filter": {
                "range": {
                     "year": { "lte": "2020-01-01" }
                }
            }
        }
    }
}

### Sorting
GET http://127.0.0.1:9200/movies/_search?sort=year

### Sorting
GET http://127.0.0.1:9200/movies/_search?sort=title.raw


### More filters
GET http://127.0.0.1:9200/movies/_search
Content-Type: application/json

{
    "query": {
        "bool": {
            "must": { "match": {"genre": "Sci-Fi"} },
            "must_not": { "match": {"title": "trek"} },
            "filter": { "range": { "year": { "gte": "2010", "lt": "2015" }} }
        }
    }
}

### Fuzzy Queries
GET http://127.0.0.1:9200/movies/_search
Content-Type: application/json

{
    "query": {
        "fuzzy": {
            "title": { "value": "intrsteller", "fuzziness": 2 }
        }
    }
}

### Partial Matching / Prefix Queries
GET http://127.0.0.1:9200/movies/_search
Content-Type: application/json

{
    "query": {
        "prefix": {
            // year must be text field
            "year": "201"
        }
    }
}

### Partial Matching / Wildcard
GET http://127.0.0.1:9200/movies/_search
Content-Type: application/json

{
    "query": {
        "wildcard": {
            // year must be text field
            "year": "*5*" // 201*, *1*
        }
    }
}


### Search as you type
GET http://127.0.0.1:9200/movies/_search
Content-Type: application/json

{
    "query": {
        "match_phrase_prefix": {
            "title": {
                "query": "star tr",
                "slop": 10
            }
        }
    }
}


###

GET http://127.0.0.1:5601
